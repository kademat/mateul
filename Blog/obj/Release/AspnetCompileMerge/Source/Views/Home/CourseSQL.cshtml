@model Blog.Models.DatabaseModels[]

@{
    ViewBag.Title = "CourseSQL";
    Layout = "~/Views/Shared/_LayoutIndex.cshtml";
}

@helper PrintInTable(IEnumerable<Blog.Models.DatabaseModels> M)
{
    <table class="table table-hover table-bordered">
        <tr>
            <th>Id</th>
            <th>Imię</th>
            <th>Stanowisko</th>
            <th>Miesięczne wynagordzenie</th>
        </tr>

        @{
            foreach (Blog.Models.DatabaseModels m in M)
            {
                <tr>
                    <td>
                        @m.ID
                    </td>
                    <td>
                        @m.Imie
                    </td>
                    <td>
                        @m.Stanowisko
                    </td>
                    <td>
                        @m.Wynagrodzenie
                    </td>
                </tr>
            }
        }
    </table>
}

<h2>Kurs SQL</h2>
<article>
    <p>
        Zaczynając od zbędnego pitu-pitu - podstawową zapytaniem w języku SQL jest <code>SELECT</code>. Pozwala ono na wybór pewnego podzbioru danych.
        Przykładowo, załóżmy, że mamy takie dane:

        @PrintInTable(Model);
        @{
            int wartosc = 3000;
        }

        Aby wybrać wszystkie osoby z powyższej list można posłużyć się poniższym zapytaniem:
        <pre>SELECT * FROM test</pre>


        Jeśli natomiast chcielibyśmy wybrać tylko część rekordów można posłużyć się zapytaniem:

        <pre>SELECT * FROM test WHERE Wynagrodzenie < @wartosc </pre>
        Wynik tego zapytania:
        @using( Html.BeginForm() )
        {
            <fieldset>
                <legend>Podaj kwotę będącą ograniczeniem zarobków</legend>
                <div class="editor-label">
                    
                </div>
            </fieldset>
        }
        @{

        }
        @PrintInTable( (from p in Model where p.Wynagrodzenie < wartosc select p) )
    </p>
</article>
